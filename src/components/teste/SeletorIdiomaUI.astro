---
import type { Lang } from "../../i18n/ui";
import {
	getLanguages,
	type T,
	getLangUrl,
} from "../../i18n/utils";

interface Props {
	t: T;
	lang: Lang;
}

const { t, lang } = Astro.props;

const languages = getLanguages();
const activeLang = lang
---

<div class="container language-tabs">
	{t("language.change_lang")}
	{
		languages.map((lang) => (
			<a
				href={'/'+getLangUrl(Astro.url.pathname, lang)}
				class={`tab ${lang === activeLang ? "active" : ""}`}
				aria-current={lang === activeLang ? "true" : "false"}
			>
				{t(`language.list.${lang}`)}
			</a>
		))
	}
</div>

<style is:global>
	main {
		position: relative;
		z-index: 1;
	}
</style>
<style>
	.language-tabs {
		display: flex;
		margin: 20px auto -32px auto;
		justify-content: flex-end;
		align-items: center;
	}

	.tab {
		padding: 2px 6px;
		text-decoration: none;
		color: #555;
		border: 1px solid #ddd;
		transition:
			background-color 0.3s,
			color 0.3s;
		background-color: white;
		cursor: pointer;
		font-size: 0.8em;
	}
	.tab:first-child {
		border-top-left-radius: 5px;
		margin-left: 10px;
	}
	.tab:not(:first-child) {
		border-left-width: 0;
	}
	.tab:last-child {
		border-top-right-radius: 5px;
	}

	.tab:hover {
		background-color: #f9f9f9;
		color: #333;
	}

	.active {
		background-color: #3ab1be;
		color: white;
		font-weight: bold;
	}
</style>

<script>
    function updateLinks() {
		const containerSelector = ".container.language-tabs"; // Altere para o seletor do seu contÃªiner
		const paramName = "curso";
        const curso = sessionStorage.getItem(paramName);
		console.log({curso})
        if (!curso) return;

        document.querySelectorAll(`${containerSelector} a`).forEach(tag => {
			const link = tag as HTMLAnchorElement
            const url = new URL(link.href, window.location.origin);
            url.searchParams.set(paramName, curso);
            link.href = url.toString();
        });
    }

    window['updateLinks'] = updateLinks;

</script>
