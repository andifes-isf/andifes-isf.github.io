---
import { getCollection } from "astro:content";
import { fetchMeta } from "../../utils/fetchMeta";

export type Props = {
  target: string;
  permanent: boolean;
  meta: {
    title?: string;
    description?: string;
    image?: string;
  };
}

export async function getStaticPaths() {
  const permalinks = await getCollection("permalinks");
  return await Promise.all(permalinks.map(async ({ id, data }) => {
    const meta = await fetchMeta(data.target)

    return {
      params: { slug: data.slug },
      props: { target: data.target, permanent: data.permanent, meta },
    }
  }));
}

const { target, permanent, meta } = Astro.props;
const redirectType = permanent ? "permanente" : "temporário";
---

<!DOCTYPE html>
<html lang="pt-br">
<head>
  <meta charset="UTF-8">
  <meta http-equiv="refresh" content={`0;url=${target}`} />
  {permanent && <link rel="canonical" href={target} />}
  <meta name="robots" content={permanent ? 'index, follow' : 'noindex, follow'} />

  <title>{meta.title ?? "Redirecionando..."}</title>
  <meta property="og:title" content={meta.title ?? "Redirecionando..."} />

  {meta.description && <meta name="description" content={meta.description} />}
  {meta.description && <meta property="og:description" content={meta.description} />}
  {meta.image && <meta property="og:image" content={meta.image} />}
</head>
<body>
  <h1>Redirecionamento {redirectType}.</h1>
  <p>Se você não for redirecionado, <a href={target}>clique aqui</a> ou copie manualmente o endereço <output>{target}</output>.</p>
</body>
</html>
